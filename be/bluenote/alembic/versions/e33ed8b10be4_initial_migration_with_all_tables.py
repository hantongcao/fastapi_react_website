"""initial migration with all tables

Revision ID: e33ed8b10be4
Revises: 
Create Date: 2025-07-03 18:24:30.200189

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel  # 添加 sqlmodel 导入
import bluenote.schemas.common  # 添加 bluenote 导入


# revision identifiers, used by Alembic.
revision: str = 'e33ed8b10be4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blogs',
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('summary', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'PUBLISHED', 'PRIVATE', 'ARCHIVED', 'DELETED', name='contentstatus'), nullable=False),
    sa.Column('visibility', sa.Enum('PUBLIC', 'FRIENDS', 'PRIVATE', name='visibility'), nullable=False),
    sa.Column('tags', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('like_count', sa.Integer(), nullable=False),
    sa.Column('comment_count', sa.Integer(), nullable=False),
    sa.Column('share_count', sa.Integer(), nullable=False),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('meta_description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('meta_keywords', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_published', sa.Boolean(), nullable=False),
    sa.Column('created_at', bluenote.schemas.common.UTCDateTime(), nullable=False),
    sa.Column('updated_at', bluenote.schemas.common.UTCDateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contacts',
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('theme', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('context', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', bluenote.schemas.common.UTCDateTime(), nullable=False),
    sa.Column('updated_at', bluenote.schemas.common.UTCDateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('photos',
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('format', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('location_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'PUBLISHED', 'PRIVATE', 'ARCHIVED', 'DELETED', name='contentstatus'), nullable=False),
    sa.Column('visibility', sa.Enum('PUBLIC', 'FRIENDS', 'PRIVATE', name='visibility'), nullable=False),
    sa.Column('tags', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('like_count', sa.Integer(), nullable=False),
    sa.Column('comment_count', sa.Integer(), nullable=False),
    sa.Column('share_count', sa.Integer(), nullable=False),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('taken_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', bluenote.schemas.common.UTCDateTime(), nullable=False),
    sa.Column('updated_at', bluenote.schemas.common.UTCDateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('photos')
    op.drop_table('contacts')
    op.drop_table('blogs')
    # ### end Alembic commands ###
